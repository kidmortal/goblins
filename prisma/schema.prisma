// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id             Int              @id @default(autoincrement())
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  name           String           @unique @db.VarChar(255)
  iconUrl        String           @default("https://discordapp.com/assets/3e531d8e171629e9433db0bb431b2e12.svg") @db.VarChar(255)
  users          User[]
  Transaction    Transaction[]
  UserHasProduct UserHasProduct[]
  Listing        Listing[]
}

model User {
  id             Int              @id @default(autoincrement())
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  name           String           @unique @db.VarChar(50)
  password       String           @default("") @db.VarChar(50)
  discordId      String           @default("") @db.VarChar(50)
  money          Int              @db.Integer
  iconUrl        String           @default("https://cdn.discordapp.com/attachments/878253814493360148/909105162898006026/software-crystal-msn.png")
  Products       Product[]
  soldProducts   Transaction[]    @relation("Sender")
  boughtProducts Transaction[]    @relation("Receiver")
  UserHasProduct UserHasProduct[]
  Listing        Listing[]
}

model UserHasProduct {
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  amount    Int

  @@id([userId, productId])
}

model Transaction {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  amount     Int
  sender     User     @relation(fields: [senderId], references: [id], name: "Sender")
  receiver   User     @relation(fields: [receiverId], references: [id], name: "Receiver")
  product    Product  @relation(fields: [productId], references: [id])
  listing    Listing  @relation(fields: [listingId], references: [id])
  senderId   Int
  receiverId Int
  productId  Int
  listingId  Int
}

model Listing {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  amount      Int           @db.Integer
  unitPrice   Int           @db.Integer
  seller      User          @relation(fields: [sellerId], references: [id])
  sellerId    Int
  product     Product       @relation(fields: [productId], references: [id])
  productId   Int
  Transaction Transaction[]
}
